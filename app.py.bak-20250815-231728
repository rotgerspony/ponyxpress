import os
from flask import Flask, jsonify, render_template, request
from dotenv import load_dotenv
from flask_login import login_required
from auth import auth_bp, init_login_manager, role_required, ensure_default_users
from models import init_db, db
from api_stops import api_stops
from api_scans import api_scans
from admin_dashboard import admin_bp

load_dotenv()
app = Flask(__name__)

# --- Config ---
app.config["SECRET_KEY"] = os.environ.get("SECRET_KEY", "change-me")
app.config["SQLALCHEMY_DATABASE_URI"] = os.environ.get("DATABASE_URL", "sqlite:///ponyxpress.db")
app.config["SQLALCHEMY_TRACK_MODIFICATIONS"] = False

# --- Init ---
init_login_manager(app)
init_db(app)
ensure_default_users(app)
app.register_blueprint(auth_bp, url_prefix="")
app.register_blueprint(api_stops)
app.register_blueprint(api_scans)
app.register_blueprint(admin_bp)

@app.get("/")
def home():
    return render_template("home.html")

@app.get("/healthz")
def healthz():
    return jsonify(ok=True), 200

# role-protected sample pages
@app.get("/carrier")
@role_required("carrier", "admin")
def carrier_page():
    return render_template("role_carrier.html")

@app.get("/substitute")
@role_required("substitute", "admin")
def substitute_page():
    return render_template("role_substitute.html")

@app.get("/admin")
@role_required("admin")
def admin_page():
    return "Admin page (admin only)"

# map
@app.get("/map")
def map_page():
    mapbox_token = os.environ.get("MAPBOX_TOKEN", "")
    center = {"lng": -94.4899, "lat": 44.7275, "zoom": 15}
    return render_template("map.html", MAPBOX_TOKEN=mapbox_token, center=center)

# scanner
@app.get("/scan")
def scan_page():
    return render_template("scan.html")

if __name__ == "__main__":
    port = int(os.environ.get("PORT", "50000"))
    app.run(host="0.0.0.0", port=port, debug=True)





@app.get("/about")
def about_page():
    return render_template("about.html")

@app.get("/help")
def help_page():
    return render_template("help.html")

@app.get("/docs")
def docs_page():
    return render_template("docs.html")

@app.get("/contact")
def contact_page():
    return render_template("contact.html")

@app.get("/privacy")
def privacy_page():
    return render_template("privacy.html")

@app.get("/terms")
def terms_page():
    return render_template("terms.html")

@app.get("/changelog")
def changelog_page():
    return render_template("changelog.html")

@app.errorhandler(404)
def not_found(e):
    return render_template("not_found.html"), 404

@app.errorhandler(500)
def server_error(e):
    return render_template("server_error.html"), 500

# BEGIN SIMPLE PAGES (auto-added)

# removed duplicate route /about ($func)


# removed duplicate route /help ($func)


# removed duplicate route /docs ($func)


# removed duplicate route /contact ($func)


# removed duplicate route /privacy ($func)


# removed duplicate route /terms ($func)


# removed duplicate route /changelog ($func)


# removed duplicate 404 handler


# removed duplicate 500 handler


